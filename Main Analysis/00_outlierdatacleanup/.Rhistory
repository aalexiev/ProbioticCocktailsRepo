# Put all into paneled graph with annotations and shared legend
volcano_fig <- ggpubr::ggarrange(volc_lifeenv_noleg,
volc_se_noleg,
volcano.plot.we,
ncol = 3, widths = c(6,6,7))
volcano_fig
# Put all into paneled graph with annotations and shared legend
volcano_fig <- ggpubr::ggarrange(volc_lifeenv_noleg,
volc_se_noleg,
volc_we_noleg,
legend_volcano
ncol = 4, widths = c(7,7,7,3))
# Put all into paneled graph with annotations and shared legend
volcano_fig <- ggpubr::ggarrange(volc_lifeenv_noleg,
volc_se_noleg,
volc_we_noleg,
legend_volcano,
ncol = 4, widths = c(7,7,7,3))
volcano_fig
ggsave(paste0(work_dir,"Figs_Tables/FungDivFig.png"), diversity_fig,
dpi = 800,
width = 24, height = 5)
ggsave(paste0(work_dir,"Figs_Tables/FungDivFig.png"), diversity_fig,
dpi = 800,
width = 13, height = 8)
ggsave(paste0(work_dir,"Figs_Tables/volcano_combo.png"), volcano_fig,
dpi = 800,
width = 24, height = 5)
ggsave(paste0(work_dir,"Figs_Tables/volcano_combo.png"), volcano_fig,
dpi = 500,
width = 16, height = 3)
volc_lifeenv_noleg <- volcano.plot + ggtitle("A") + theme(legend.position = "none")
volc_se_noleg <- volcano.plot.se + ggtitle("B") + theme(legend.position = "none")
volc_we_noleg <- volcano.plot.we + ggtitle("C") + theme(legend.position = "none")
# Put all into paneled graph with annotations and shared legend
volcano_fig <- ggpubr::ggarrange(volc_lifeenv_noleg,
volc_se_noleg,
volc_we_noleg,
legend_volcano,
ncol = 4, widths = c(5,5,5,1))
volcano_fig
ggsave(paste0(work_dir,"Figs_Tables/volcano_combo.png"), volcano_fig,
dpi = 500,
width = 16, height = 3)
# Put all into paneled graph with annotations and shared legend
volcano_fig <- ggpubr::ggarrange(volc_lifeenv_noleg,
volc_se_noleg,
volc_we_noleg,
legend_volcano,
ncol = 4, widths = c(5,5,5,2))
ggsave(paste0(work_dir,"Figs_Tables/volcano_combo.png"), volcano_fig,
dpi = 500,
width = 16, height = 3)
ggsave(paste0(work_dir,"Figs_Tables/volcano_combo.png"), volcano_fig,
dpi = 500,
width = 17, height = 3)
# filter to only have ecologically relevant data
merged_filt_ecol <- W_frame %>%
dplyr::filter(Enriched %in% c("Symbiotic", "Transient"))
merged_filt_ecol$env_relAbund_ln <- log(merged_filt_ecol$env_relAbund)
View(W_frame)
merged_filt_ecol$env_relAbund_ln <- log(merged_filt_ecol$Environment_relAbund)
merged_filt_ecol$life_relAbund_ln <- log(merged_filt_ecol$Toad_relAbund)
write.table(merged_filt_ecol,
paste0(work_dir,"02_hypothesisbasedanalsysis/indic_taxabunds_lifeenv.txt"),
sep="\t", quote=F)
rel_plot <- ggplot(merged_filt_ecol) +
geom_point(aes(x = env_relAbund_ln, y = life_relAbund_ln, color = Enriched)) +
xlab("Natural log Relative Abundance on Environmental Samples") +
ylab("Natural log Relative Abundance on Toad Samples") +
labs(color = "Putative host relationship") +
xlim(-10,0) + ylim(-10,0) +
scale_color_manual(values = c("#56B4E9", "#CC79A7")) +
geom_abline(intercept = 0, slope = 1, color = "red", linetype = "dashed")
rel_plot
write.table(W_frame,
paste0(work_dir,"02_hypothesisbasedanalsysis/indic_taxabunds_lifeenv.txt"),
sep="\t", quote=F)
# make a volcano plot showing the associated microbes
W_frame <- comparison_test_lifeenv$W.taxa %>%
mutate(Enriched = case_when(W_stat < 50 | W_f < 10 ~ "Transient, not significant",
Environment_relAbund > Toad_relAbund ~ "Transient",
TRUE ~ "Symbiotic"))
# figure out order of ecol for legend
Ecol_list <- c("Symbiotic", "Transient", "Transient, not significant")
W_frame$Enriched <- factor(W_frame$Enriched, levels = Ecol_list)
write.table(W_frame,
paste0(work_dir,"02_hypothesisbasedanalsysis/indic_taxabunds_lifeenv.txt"),
sep="\t", quote=F)
lifeenv_filt_ecol <- W_frame %>%
dplyr::filter(Enriched %in% c("Symbiotic", "Transient"))
se_filt_ecol <- W_frame_se %>%
dplyr::filter(Enriched %in% c("Symbiotic", "Transient"))
we_filt_ecol <- W_frame_we %>%
dplyr::filter(Enriched %in% c("Symbiotic", "Transient"))
merged_filt_ecol <- merge(lifeenv_filt_ecol, se_filt_ecol, we_filt_ecol)
merged_filt_ecol <- cbind(lifeenv_filt_ecol, se_filt_ecol, we_filt_ecol)
merged_filt_ecol <- rbind(lifeenv_filt_ecol, se_filt_ecol, we_filt_ecol)
view(merged_filt_ecol)
merged_filt_ecol[is.nan(merged_filt_ecol)] <- 0
merged_filt_ecol[is.na(merged_filt_ecol)] <- 0
we_filt_ecol <- W_frame_we %>%
dplyr::filter(Enriched %in% c("Symbiotic", "Transient")) %>%
replace_na(0)
we_filt_ecol <- W_frame_we %>%
dplyr::filter(Enriched %in% c("Symbiotic", "Transient")) %>%
replace_na(list(x = 0, y = 0))
view(we_filt_ecol)
str(we_filt_ecol)
we_filt_ecol <- W_frame_we %>%
dplyr::filter(Enriched %in% c("Symbiotic", "Transient")) %>%
replace(is.na(), 0)
we_filt_ecol <- W_frame_we %>%
replace(is.na(W_frame_we), 0) %>%
dplyr::filter(Enriched %in% c("Symbiotic", "Transient"))
we_filt_ecol <- W_frame_we %>%
replace(is.nan(W_frame_we), 0) %>%
dplyr::filter(Enriched %in% c("Symbiotic", "Transient"))
merged_filt_ecol$Environment_relAbund[is.nan(merged_filt_ecol$Environment_relAbund)] <- 0
str(merged_filt_ecol$Environment_relAbund)
is.nan(merged_filt_ecol$Environment_relAbund)
is.na(merged_filt_ecol$Environment_relAbund)
merged_filt_ecol$Environment_relAbund <- replace(merged_filt_ecol$Environment_relAbund, 11, 0)
which(Environment_relAbund == "NaN")
which(we_filt_ecol$Environment_relAbund == "NaN")
we_filt_ecol$Environment_relAbund
merged_filt_ecol <- rbind(lifeenv_filt_ecol, se_filt_ecol, we_filt_ecol)
merged_filt_ecol$env_relAbund_ln <- log(merged_filt_ecol$Environment_relAbund)
merged_filt_ecol$life_relAbund_ln <- log(merged_filt_ecol$Toad_relAbund)
merged_filt_ecol$env_relAbund_ln <- log(merged_filt_ecol$Environment_relAbund)
merged_filt_ecol$life_relAbund_ln <- log(merged_filt_ecol$Toad_relAbund)
view(merged_filt_ecol)
log(0)
write.table(merged_filt_ecol,
paste0(work_dir,"02_hypothesisbasedanalsysis/indic_taxabunds_combo.txt"),
sep="\t", quote=F)
rel_plot <- ggplot(merged_filt_ecol) +
geom_point(aes(x = env_relAbund_ln, y = life_relAbund_ln, color = Enriched)) +
xlab("Natural log Relative Abundance on Environmental Samples") +
ylab("Natural log Relative Abundance on Toad Samples") +
labs(color = "Putative host relationship") +
xlim(-10,0) + ylim(-10,0) +
scale_color_manual(values = c("#56B4E9", "#CC79A7")) +
geom_abline(intercept = 0, slope = 1, color = "red", linetype = "dashed")
rel_plot
rel_plot <- ggplot(merged_filt_ecol) +
geom_point(aes(x = env_relAbund_ln, y = life_relAbund_ln, color = Enriched)) +
xlab("Natural log Relative Abundance on Environmental Samples") +
ylab("Natural log Relative Abundance on Toad Samples") +
labs(color = "Putative host relationship") +
xlim(-12,0) + ylim(-12,0) +
scale_color_manual(values = c("#56B4E9", "#CC79A7")) +
geom_abline(intercept = 0, slope = 1, color = "red", linetype = "dashed")
rel_plot
log(0.0001)
log(0.000000000001)
merged_filt_ecol <- rbind(lifeenv_filt_ecol, se_filt_ecol, we_filt_ecol)
write.table(merged_filt_ecol,
paste0(work_dir,"02_hypothesisbasedanalsysis/indic_taxabunds_combo.txt"),
sep = "\t", quote = F)
rel_plot <- ggplot(merged_filt_ecol) +
geom_point(aes(x = Environmental_relAbund, y = Toad_relAbund, color = Enriched)) +
xlab("Relative Abundance on Environmental Samples") +
ylab("Relative Abundance on Toad Samples") +
labs(color = "Putative host relationship") +
xlim(-10,0) + ylim(-10,0) +
scale_color_manual(values = c("#56B4E9", "#CC79A7")) +
geom_abline(intercept = 0, slope = 1, color = "red", linetype = "dashed")
rel_plot
rel_plot <- ggplot(merged_filt_ecol) +
geom_point(aes(x = Environment_relAbund, y = Toad_relAbund, color = Enriched)) +
xlab("Relative Abundance on Environmental Samples") +
ylab("Relative Abundance on Toad Samples") +
labs(color = "Putative host relationship") +
xlim(-10,0) + ylim(-10,0) +
scale_color_manual(values = c("#56B4E9", "#CC79A7")) +
geom_abline(intercept = 0, slope = 1, color = "red", linetype = "dashed")
rel_plot
rel_plot <- ggplot(merged_filt_ecol) +
geom_point(aes(x = Environment_relAbund, y = Toad_relAbund, color = Enriched)) +
xlab("Relative Abundance on Environmental Samples") +
ylab("Relative Abundance on Toad Samples") +
labs(color = "Putative host relationship") +
#  xlim(-10,0) + ylim(-10,0) +
scale_color_manual(values = c("#56B4E9", "#CC79A7")) +
geom_abline(intercept = 0, slope = 1, color = "red", linetype = "dashed")
rel_plot
rel_plot <- ggplot(merged_filt_ecol) +
geom_point(aes(x = Environment_relAbund, y = Toad_relAbund, color = Enriched)) +
xlab("Relative Abundance on Environmental Samples") +
ylab("Relative Abundance on Toad Samples") +
labs(color = "Putative host relationship") +
xlim(0, 0.3) + ylim(0, 0.3) +
scale_color_manual(values = c("#56B4E9", "#CC79A7")) +
geom_abline(intercept = 0, slope = 1, color = "red", linetype = "dashed")
rel_plot
ggsave(paste0(work_dir,"Figs_Tables/rel_dotplot.png"), rel_plot,
dpi=300, width=7, height=4)
merged_filt_ecol <- rbind(se_filt_ecol, we_filt_ecol)
we_se_filt_ecol <- rebind(se_filt_ecol, we_filt_ecol)
we_se_filt_ecol <- rbind(se_filt_ecol, we_filt_ecol)
rel_plot <- ggplot(lifeenv_filt_ecol) +
geom_point(aes(x = Environment_relAbund, y = Toad_relAbund, color = Enriched)) +
xlab("Relative Abundance on Environmental Samples") +
ylab("Relative Abundance on Toad Samples") +
labs(color = "Putative host relationship") +
xlim(0, 0.3) + ylim(0, 0.3) +
scale_color_manual(values = c("#56B4E9", "#CC79A7")) +
geom_abline(intercept = 0, slope = 1, color = "red", linetype = "dashed")
rel_plot
rel_plot_lifeenv <- ggplot(lifeenv_filt_ecol) +
geom_point(aes(x = Environment_relAbund, y = Toad_relAbund, color = Enriched)) +
xlab("Relative Abundance on Environmental Samples") +
ylab("Relative Abundance on Toad Samples") +
labs(color = "Putative host relationship") +
xlim(0, 0.3) + ylim(0, 0.3) +
scale_color_manual(values = c("#56B4E9", "#CC79A7")) +
geom_abline(intercept = 0, slope = 1, color = "red", linetype = "dashed")
rel_plot_lifeenv
rel_plot_lwe_se <- ggplot(we_se_filt_ecol) +
geom_point(aes(x = Environment_relAbund, y = Toad_relAbund, color = Enriched)) +
xlab("Relative Abundance on Environmental Samples") +
ylab("Relative Abundance on Toad Samples") +
labs(color = "Putative host relationship") +
xlim(0, 0.3) + ylim(0, 0.3) +
scale_color_manual(values = c("#56B4E9", "#CC79A7")) +
geom_abline(intercept = 0, slope = 1, color = "red", linetype = "dashed")
rel_plot_we_se
rel_plot_we_se <- ggplot(we_se_filt_ecol) +
geom_point(aes(x = Environment_relAbund, y = Toad_relAbund, color = Enriched)) +
xlab("Relative Abundance on Environmental Samples") +
ylab("Relative Abundance on Toad Samples") +
labs(color = "Putative host relationship") +
xlim(0, 0.3) + ylim(0, 0.3) +
scale_color_manual(values = c("#56B4E9", "#CC79A7")) +
geom_abline(intercept = 0, slope = 1, color = "red", linetype = "dashed")
rel_plot_we_se
rel_plot_we_se <- ggplot(we_se_filt_ecol) +
geom_point(aes(x = Environment_relAbund, y = Toad_relAbund, color = Enriched)) +
xlab("Relative Abundance on Environmental Samples") +
ylab("Relative Abundance on Toad Samples") +
labs(color = "Putative host relationship") +
xlim(0, 0.1) + ylim(0, 0.1) +
scale_color_manual(values = c("#56B4E9", "#CC79A7")) +
geom_abline(intercept = 0, slope = 1, color = "red", linetype = "dashed")
rel_plot_we_se
rel_plot_we_se <- ggplot(we_se_filt_ecol) +
geom_point(aes(x = Environment_relAbund, y = Toad_relAbund, color = Enriched)) +
xlab("Relative Abundance on Environmental Samples") +
ylab("Relative Abundance on Toad Samples") +
labs(color = "Putative host relationship") +
xlim(0, 0.075) + ylim(0, 0.075) +
scale_color_manual(values = c("#56B4E9", "#CC79A7")) +
geom_abline(intercept = 0, slope = 1, color = "red", linetype = "dashed")
rel_plot_we_se
# create paneled fig
legend_relplot <- arrangeGrob(get_legend(rel_plot_lifeenv))
relplot_le_noleg <- rel_plot_lifeenv + ggtitle("A") + theme(legend.position = "none")
relplot_wese_noleg <- rel_plot_we_se + ggtitle("B") + theme(legend.position = "none")
# Put all into paneled graph with annotations and shared legend
relplot_fig <- ggpubr::ggarrange(arrangeGrob(relplot_le_noleg,
relplot_wese_noleg),
legend_relplot,
ncol = 2, widths = c(4,3))
relplot_fig
ggsave(paste0(work_dir,"Figs_Tables/relplot_fig.png"), relplot_fig,
dpi = 300, width = 7, height = 4)
ggsave(paste0(work_dir,"Figs_Tables/relplot_fig.png"), relplot_fig,
dpi = 300, width = 7, height = 7)
# save R workspace
save.image(file = paste0(work_dir, "02_hypothesisbasedanalsysis/FungalDevData_mainpub_workspace.RData"))
getwd()
source("~/Documents/Projects/ProbioticCocktails/00_LabWork/CFS_tests/plate_to_meta.R")
View(read.96wellPlate)
read.96wellPlate("~/Documents/Projects/ProbioticCocktails/00_LabWork/CFS_tests/CFS as trial 1.22.21/cfs_as_Plate0_T0_1030pm.xlsx",
OUTPUTPATH = "96-well-metadata_table.txt")
read.96wellPlate("~/Documents/Projects/ProbioticCocktails/00_LabWork/CFS_tests/CFS as trial 1.22.21/cfs_as_Plate1_T0_1125pm.xlsx",
OUTPUTPATH = "96-well-metadata_table.txt")
read.96wellPlate("~/Documents/Projects/ProbioticCocktails/00_LabWork/CFS_tests/CFS as trial 1.22.21/cfs_as_Plate1_T0_1125pm.txt",
write.out = T,
OUTPUTPATH = "96-well-metadata_table.txt")
read.96wellPlate("~/Documents/Projects/ProbioticCocktails/00_LabWork/CFS_tests/CFS as trial 1.22.21/cfs_as_Plate1_T0_1125pm.txt",
write.out = T,
OUTPUTPATH = "96-well-metadata_table.txt")
read.96wellPlate("~/Documents/Projects/ProbioticCocktails/00_LabWork/CFS_tests/CFS as trial 1.22.21/cfs_as_Plate1_T0_1125pm.txt",
write_out = T,
OUTPUTPATH = "96-well-metadata_table.txt")
require(dplyr)
source("~/Documents/Projects/ProbioticCocktails/00_LabWork/CFS_tests/plate_to_meta.R")
read.96wellPlate("~/Documents/Projects/ProbioticCocktails/00_LabWork/CFS_tests/CFS as trial 1.22.21/cfs_as_Plate1_T0_1125pm.txt",
write_out = T,
OUTPUTPATH = "96-well-metadata_table.txt")
read.96wellPlate("~/Documents/Projects/ProbioticCocktails/00_LabWork/CFS_tests/CFS as trial 1.22.21/cfs_as_Plate1_T0_1125pm.txt",
write_out = T,
OUTPUTPATH = "96-well-metadata_table.txt")
read.96wellPlate("~/Documents/Projects/ProbioticCocktails/00_LabWork/CFS_tests/CFS as trial 1.22.21/cfs_as_Plate1_T0_1125pm.txt",
write_out = T,
OUTPUTPATH = "96-well-metadata_table.txt")
read.96wellPlate("~/Documents/Projects/ProbioticCocktails/00_LabWork/CFS_tests/CFS as trial 1.22.21/cfs_as_Plate1_T0_1125pm.txt",
write_out = T,
OUTPUTPATH = "96-well-metadata_table.txt")
read.96wellPlate("~/Documents/Projects/ProbioticCocktails/00_LabWork/CFS_tests/CFS as trial 1.22.21/cfs_as_Plate1_T0_1125pm.txt",
write_out = T,
OUTPUTPATH = "96-well-metadata_table.txt")
installed.packages()
install.packages(c("ade4", "backports", "BH", "BiocManager", "broom", "callr", "cli", "clipr", "colorspace", "covr", "cpp11", "crayon", "crosstalk", "data.table", "DBI", "dbplyr", "desc", "devtools", "digest", "dplyr", "DT", "fansi", "farver", "forcats", "foreach", "Formula", "generics", "ggplot2", "gh", "git2r", "glmnet", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "igraph", "isoband", "iterators", "jsonlite", "knitr", "labeling", "lifecycle", "lubridate", "magrittr", "memoise", "mime", "openssl", "pillar", "pixmap", "pkgbuild", "pkgload", "processx", "promises", "ps", "R6", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "remotes", "reprex", "rlang", "rmarkdown", "rprojroot", "rstudioapi", "rvest", "shape", "sp", "stringi", "testthat", "tibble", "tidyr", "tinytex", "usethis", "utf8", "vctrs", "vegan", "VGAM", "viridisLite", "withr", "xfun"), lib="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(growthcurver)
source("filt_growth_curves.R")
getwd()
setwd("Documents/Projects/ProbioticCocktails/02_PreliminaryAnalysis/Cocktail_trials/00_datacleanup/02_outlierfilter")
source("filt_growth_curves.R")
############ Load files ##########
cfs_as <- read.delim("CFS_as_2.25.21_metadataLONG.txt", sep = " ")
cfs_fac <- read.delim("CFS_fac_2.27.21_metadataLONG.txt", sep = " ")
bact_fac <- read.delim("Paired_fac_metadata_CLEAN.txt", sep = "\t")
#### Look at data first ####
# Need to add some hourly timepoints in
# Add replicate # for easy plotting
cfs_as_edit <- cfs_as %>%
unite(well_ID,Plate, col="Rep_char", remove=FALSE) %>%
group_by(sampleID, HoursElapsed)  %>% mutate(Rep = factor(rank(Rep_char)))# This makes each well belonging to unique sampleID:hours combo a different "rep"
# This one looks fine; but add rep IDs
cfs_fac_edit <- cfs_fac %>%
unite(well_ID,Plate, col="Rep_char", remove=FALSE) %>%
group_by(sampleID, HoursElapsed)  %>% mutate(Rep = factor(rank(Rep_char)))# This makes each well belonging to unique sampleID:hours combo a different "rep"
# Convert to long format
# Remove NAs
bact_fac_edit <- bact_fac %>% pivot_longer(starts_with("HR"), names_to="time", values_to="OD") %>%
separate(time, into = c("HR","remove"), sep="_") %>%
mutate(HoursElapsed = as.numeric(gsub("HR","",HR))) %>%
rename(sampleID = Sample_Type) %>%
separate(Replicate_trial, into = c("remove1","remove2", "Rep"), sep="_", remove=FALSE, fill = "left") %>%
select(-c(HR, remove, remove1, remove2)) %>%
filter(!is.na(OD)) %>% mutate(Rep = factor(Rep))
# Plot to verify that everything looks normal
# Look at singles to see what kind of noise there is
cfs_as_edit %>%
ggplot() + geom_line(aes(x=HoursElapsed, y=OD, group=Rep, col=factor(Plate))) +
facet_wrap(.~sampleID, ncol = 5)
# Plot to verify that everything looks normal
# Look at singles to see what kind of noise there is
cfs_fac_edit %>%
ggplot() + geom_line(aes(x=HoursElapsed, y=OD, group=Rep, col=factor(Plate))) +
facet_wrap(.~sampleID, ncol=5)
bact_fac_edit %>%
# filter(sampleID == unique(cfs_as_edit$sampleID)[6]) %>%
ggplot() + geom_line(aes(x=HoursElapsed, y=OD, group=Rep)) +
facet_wrap(.~sampleID, ncol=4)
## Subtract out sterile media/controls
# Here, I take the average OD of "controls" (aka CFS only) and subtract it out of the Bd ones.
cfs_as_types <- cfs_as_edit %>%
rowwise() %>% mutate(Bd = ifelse(length(grep("Bd", sampleID))>0, "Bd","noBd"), CFS_type = gsub("_Bd","",sampleID)) %>%  ungroup() %>%
mutate(CFS_type = ifelse(CFS_type%in% c("SterileMedium","Live"), "Control", CFS_type))
cfs_as_con <- cfs_as_types %>% filter(Bd=="noBd") %>%group_by(CFS_type, Timepoint, HoursElapsed) %>%
summarize(conOD_ave = mean(OD), conOD_sd = sd(OD)) %>% ungroup()
cfs_as_treat_adj  <- cfs_as_types %>%  left_join(cfs_as_con) %>%
mutate(OD_adj = OD-conOD_ave) %>% filter(Bd=="Bd")
#For fac
cfs_fac_types <- cfs_fac_edit %>%
rowwise() %>% mutate(Bd = ifelse(length(grep("Bd", sampleID))>0, "Bd","noBd"), CFS_type = gsub("_Bd","",sampleID)) %>%  ungroup() %>%
mutate(CFS_type = ifelse(CFS_type%in% c("SterileMedium","Live"), "Control", CFS_type))
cfs_fac_con <- cfs_fac_types %>% filter(Bd=="noBd") %>%group_by(CFS_type, Timepoint, HoursElapsed) %>%
summarize(conOD_ave = mean(OD), conOD_sd = sd(OD)) %>% ungroup()
cfs_fac_treat_adj  <- cfs_fac_types %>%  left_join(cfs_fac_con) %>%
mutate(OD_adj = OD-conOD_ave) %>% filter(Bd=="Bd")
# For naming consistency; make another copy
bact_fac_treat_adj <- bact_fac_edit  %>% mutate(OD_adj = OD) %>%
filter(HoursElapsed<50)
fit_cfs_as <- fit_growth_curve(dat = cfs_as_treat_adj, "Rep", "sampleID", "OD_adj", "HoursElapsed")
fit_cfs_as$`Plot fit of pooled model`
fit_cfs_fac <- fit_growth_curve(dat = cfs_fac_treat_adj, "Rep", "sampleID", "OD_adj", "HoursElapsed")
fit_cfs_fac$`Plot fit of pooled model`
warnings()
View(cfs_fac_treat_adj)
fit_bact_fac <- fit_growth_curve(dat = bact_fac_treat_adj, "Rep", "sampleID", "OD_adj", "HoursElapsed", single_outlier_cutoff = c("sd",2))
fit_bact_fac$`Plot fit of pooled model`
fit_cfs_as$`Plot outliers of centred data`
fit_cfs_as$`Plot outliers of centred fit variables`
fit_cfs_as$`Plot outliers of raw fit variables`
View(cfs_fac_treat_adj)
colnames(is.na(cfs_fac_treat_adj$OD_adj))
colnames(is.na(cfs_fac_treat_adj$HoursElapsed))
colnames(is.na(cfs_fac_treat_adj$sampleID))
colnames(is.na(cfs_fac_treat_adj$Rep))
# Plot to verify that everything looks normal
# Look at singles to see what kind of noise there is
cfs_as_edit %>%
ggplot() + geom_line(aes(x=HoursElapsed, y=OD, group=Rep, col=factor(Plate))) +
facet_wrap(.~sampleID, ncol = 5)
# Plot to verify that everything looks normal
# Look at singles to see what kind of noise there is
cfs_fac_edit %>%
ggplot() + geom_line(aes(x=HoursElapsed, y=OD, group=Rep, col=factor(Plate))) +
facet_wrap(.~sampleID, ncol=5)
bact_fac_edit %>%
# filter(sampleID == unique(cfs_as_edit$sampleID)[6]) %>%
ggplot() + geom_line(aes(x=HoursElapsed, y=OD, group=Rep)) +
facet_wrap(.~sampleID, ncol=4)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(growthcurver)
source("filt_growth_curves.R")
############ Load files ##########
cfs_as <- read.delim("CFS_as_2.25.21_metadataLONG.txt", sep = " ")
cfs_fac <- read.delim("CFS_fac_2.27.21_metadataLONG.txt", sep = " ")
bact_fac <- read.delim("Paired_fac_metadata_CLEAN.txt", sep = "\t")
#### Look at data first ####
# Need to add some hourly timepoints in
# Add replicate # for easy plotting
cfs_as_edit <- cfs_as %>%
unite(well_ID,Plate, col="Rep_char", remove=FALSE) %>%
group_by(sampleID, HoursElapsed)  %>% mutate(Rep = factor(rank(Rep_char)))# This makes each well belonging to unique sampleID:hours combo a different "rep"
# This one looks fine; but add rep IDs
cfs_fac_edit <- cfs_fac %>%
unite(well_ID,Plate, col="Rep_char", remove=FALSE) %>%
group_by(sampleID, HoursElapsed)  %>% mutate(Rep = factor(rank(Rep_char)))# This makes each well belonging to unique sampleID:hours combo a different "rep"
# Convert to long format
# Remove NAs
bact_fac_edit <- bact_fac %>% pivot_longer(starts_with("HR"), names_to="time", values_to="OD") %>%
separate(time, into = c("HR","remove"), sep="_") %>%
mutate(HoursElapsed = as.numeric(gsub("HR","",HR))) %>%
rename(sampleID = Sample_Type) %>%
separate(Replicate_trial, into = c("remove1","remove2", "Rep"), sep="_", remove=FALSE, fill = "left") %>%
select(-c(HR, remove, remove1, remove2)) %>%
filter(!is.na(OD)) %>% mutate(Rep = factor(Rep))
# Plot to verify that everything looks normal
# Look at singles to see what kind of noise there is
cfs_as_edit %>%
ggplot() + geom_line(aes(x=HoursElapsed, y=OD, group=Rep, col=factor(Plate))) +
facet_wrap(.~sampleID, ncol = 5)
## Subtract out sterile media/controls
# Here, I take the average OD of "controls" (aka CFS only) and subtract it out of the Bd ones.
cfs_as_types <- cfs_as_edit %>%
rowwise() %>% mutate(Bd = ifelse(length(grep("Bd", sampleID))>0, "Bd","noBd"), CFS_type = gsub("_Bd","",sampleID)) %>%  ungroup() %>%
mutate(CFS_type = ifelse(CFS_type%in% c("SterileMedium","Live"), "Control", CFS_type))
cfs_as_con <- cfs_as_types %>% filter(Bd=="noBd") %>%group_by(CFS_type, Timepoint, HoursElapsed) %>%
summarize(conOD_ave = mean(OD), conOD_sd = sd(OD)) %>% ungroup()
cfs_as_treat_adj  <- cfs_as_types %>%  left_join(cfs_as_con) %>%
mutate(OD_adj = OD-conOD_ave) %>% filter(Bd=="Bd")
#For fac
cfs_fac_types <- cfs_fac_edit %>%
rowwise() %>% mutate(Bd = ifelse(length(grep("Bd", sampleID))>0, "Bd","noBd"), CFS_type = gsub("_Bd","",sampleID)) %>%  ungroup() %>%
mutate(CFS_type = ifelse(CFS_type%in% c("SterileMedium","Live"), "Control", CFS_type))
cfs_fac_con <- cfs_fac_types %>% filter(Bd=="noBd") %>%group_by(CFS_type, Timepoint, HoursElapsed) %>%
summarize(conOD_ave = mean(OD), conOD_sd = sd(OD)) %>% ungroup()
cfs_fac_treat_adj  <- cfs_fac_types %>%  left_join(cfs_fac_con) %>%
mutate(OD_adj = OD-conOD_ave) %>% filter(Bd=="Bd")
# For naming consistency; make another copy
bact_fac_treat_adj <- bact_fac_edit  %>% mutate(OD_adj = OD) %>%
filter(HoursElapsed<50)
fit_cfs_as <- fit_growth_curve(dat = cfs_as_treat_adj, "Rep", "sampleID", "OD_adj", "HoursElapsed")
fit_cfs_as$`Plot fit of pooled model`
getwd()
write.table(cfs_as_treat_adj, "cfs_as_treat_sterilesubtr.txt", sep = " ")
write.table(cfs_fac_treat_adj, "cfs_fac_treat_sterilesubtr.txt", sep = " ")
write.table(bact_fac_treat_adj, "bact_fac_treat_sterilesubtr.txt", sep = " ")
fit_cfs_fac <- fit_growth_curve(dat = cfs_fac_treat_adj, "Rep", "sampleID", "OD_adj", "HoursElapsed")
fit_cfs_fac$`Plot fit of pooled model`
fit_bact_fac <- fit_growth_curve(dat = bact_fac_treat_adj, "Rep", "sampleID", "OD_adj", "HoursElapsed", single_outlier_cutoff = c("sd",2))
fit_bact_fac$`Plot fit of pooled model`
View(fit_bact_fac)
fit_cfs_as$`Pooled fit`
View(fit_cfs_as$`Pooled fit`)
View(fit_cfs_fac$`Fit of individual replicates`)
save.image("~/Documents/Projects/ProbioticCocktails/02_PreliminaryAnalysis/Cocktail_trials/00_datacleanup/02_outlierfilter/cocktails_outlierFIT.RData")
saveRDS(fit_bact_fac, "fit_bact_fac.rds")
saveRDS(fit_cfs_as, "fit_cfs_as.rds")
saveRDS(fit_cfs_fac, "fit_cfs_fac.rds")
getwd()
fit_bact_fac <- readRDS("output_files/fit_bact_fac.rds")
fit_cfs_as <- readRDS("output_files/fit_cfs_as.rds")
fit_cfs_fac <- readRDS("output_files/fit_cfs_fac.rds")
fit_bact_fac <- readRDS("output_files/fit_bact_fac.rds")
library(tidyverse)
View(fit_cfs_as)
# assign objects to data frames of relevance
cfs_as_fitEst <- fit_cfs_as$`Fit of individual replicates`
cfs_fac_fitEst <- fit_cfs_fac$`Fit of individual replicates`
bact_fac_fitEst <- fit_bact_fac$`Fit of individual replicates`
e^1
cfs_as_fitEst$N1 <- with(cfs_as_fitEst, k / (1 + (k - n0)/n0 * exp(-(r * t_gen))))
View(cfs_as_fitEst)
# assign objects to data frames of relevance
cfs_as_fitEst <- fit_cfs_as$`Pooled fit`
cfs_fac_fitEst <- fit_cfs_fac$`Pooled fit`
bact_fac_fitEst <- fit_bact_fac$`Pooled fit`
cfs_as_fitEst$N1 <- with(cfs_as_fitEst, k / (1 + (k - n0)/n0 * exp(-(r * t_gen))))
cfs_as_fitEst[is.nan(cfs_as_fitEst)] <- 0
str(cfs_as_fitEst)
cfs_as_fitEst[is.na(cfs_as_fitEst)] <- 0
cfs_fac_fitEst$N1 <- with(cfs_fac_fitEst, k / (1 + (k - n0)/n0 * exp(-(r * t_gen))))
cfs_fac_fitEst[is.na(cfs_fac_fitEst)] <- 0 # replace NaNs with zero since they are 0 growth
View(cfs_fac_fitEst)
bact_fac_fitEst$N1 <- with(bact_fac_fitEst, k / (1 + (k - n0)/n0 * exp(-(r * t_gen))))
bact_fac_fitEst[is.na(bact_fac_fitEst)] <- 0 # replace NaNs with zero since they are 0 growth
View(bact_fac_fitEst)
cfs_as_fitEst$N1 <- with(cfs_as_fitEst, k / (1 + (k - n0)/n0 * exp(-(r * 100))))
cfs_as_fitEst[is.na(cfs_as_fitEst)] <- 0 # replace NaNs with zero since they are 0 growth
cfs_fac_fitEst$N1 <- with(cfs_fac_fitEst, k / (1 + (k - n0)/n0 * exp(-(r * 100))))
cfs_fac_fitEst[is.na(cfs_fac_fitEst)] <- 0 # replace NaNs with zero since they are 0 growth
bact_fac_fitEst$N1 <- with(bact_fac_fitEst, k / (1 + (k - n0)/n0 * exp(-(r * 100))))
bact_fac_fitEst[is.na(bact_fac_fitEst)] <- 0 # replace NaNs with zero since they are 0 growth
save.image("~/Documents/Projects/ProbioticCocktails/02_PreliminaryAnalysis/Cocktail_trials/01_preliminaryAnalysis/Calc_metrics_prelimAnalysis.RData")
saveRDS(cfs_as_fitEst, "cfs_as_fitEst.rds")
saveRDS(cfs_fac_fitEst, "cfs_fac_fitEst.rds")
saveRDS(bact_fac_fitEst, "bact_fac_fitEst.rds")
View(bact_fac_fitEst)
View(cfs_as_fitEst)
View(cfs_fac_fitEst)
View(cfs_as_fitEst)
